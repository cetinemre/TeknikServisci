@model TeknikServisci.Models.ViewModels.FailureViewModel
@using TeknikServisci.Models.Enums
@{
	ViewBag.Title = "Invoice";
	Layout = "~/Views/Shared/_LayoutMain.cshtml";
}

<div class="pageheader hidden-xs">
	<h3><i class="fa fa-search-plus"></i>Arıza Fatura Ayrıntısı</h3>
</div>
<div id="content-container">
	<!--Page content-->
	<!--===================================================-->
	<div id="page-content">
		<div class="row">
			<div class="col-md-6 col-md-offset-3">
				<div class="panel">
					<div class="panel-heading">
						<h3 class="panel-title">#@Model.FailureId - @Model.FailureName adlı arızanın fatura bilgileri</h3>
					</div><br />
					<!-- Striped Table -->
					<!--===================================================-->
                          <div class="panel-body">

                              <br /><br /><br /><br />
                              <h3>@TempData["Message"]</h3>

                              @using (Html.BeginForm("CreateInvoice", "Technician", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
                              {
                                  @Html.AntiForgeryToken()
                                  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                  @Html.HiddenFor(x => x.FailureId)

                                  <div class="form-group row">
                                      <div class="col-sm-9 control-label">
                                          <label class="form-checkbox form-icon form-text">
                                              @Html.CheckBoxFor(x => x.HasWarranty)
                                              @Html.DisplayNameFor(x => x.HasWarranty)
                                          </label>
                                      </div>
                                      <div class="col-sm-9 control-label">
                                          @Html.LabelFor(x => x.Price)
                                          @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
                                          @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
                                      </div>
                                      <div class="col-sm-9 control-label">
                                          @Html.LabelFor(x => x.Report)
                                          @Html.TextBoxFor(x => x.Report, new { @class = "form-control" })
                                          @Html.ValidationMessageFor(x => x.Report, "", new { @class = "text-danger" })
                                      </div>
                                      <div class="col-sm-9 control-label">
                                          @Html.RadioButtonFor(x => x.RepairProcess, RepairProcesses.Successful)@Html.Label("Başarılı")
                                          @Html.RadioButtonFor(x => x.RepairProcess, RepairProcesses.Failed)@Html.Label("Başarısız")
                                      </div>
                                  </div>
                                  <div class="row narrow-gutter">
                                      <div class="col-xs-6">
                                          <button type="submit" class="btn btn-primary">İşlemi Bitir</button>
                                      </div>
                                  </div>

                              }


                          </div>
					<!--===================================================-->
					<!-- End Striped Table -->
				</div>
			</div>
		</div>
		<!--===================================================-->
		<!--END CONTENT CONTAINER-->
	</div>
</div>


